{"ast":null,"code":"var _jsxFileName = \"/home/jef/Documents/Git/buecherei/REACT/src/Category.tsx\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Book from './Book';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet books;\nasync function fetchBooks(id) {\n  let res = await fetch(\"http://localhost:3001/get?type=\" + id);\n  let Response = await res.json();\n  books = Response;\n  let ret = [];\n  books.forEach(b => {\n    ret.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Book, {\n        title: b.title,\n        author: b.author,\n        isbn: b.isbn,\n        cover: b.cover,\n        types: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this));\n  });\n  return ret;\n}\nexport default function Category(props) {\n  _s();\n  const [books, initBooks] = useState([]);\n  useEffect(() => {\n    fetchBooks(props.id).then(data => {\n      initBooks(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Category\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.Name, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCaretDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(Category, \"SqsziitPmZVrUftkWu9EEzzLefs=\");\n_c = Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["FontAwesomeIcon","faCaretDown","Book","useEffect","useState","jsxDEV","_jsxDEV","books","fetchBooks","id","res","fetch","Response","json","ret","forEach","b","push","children","title","author","isbn","cover","types","fileName","_jsxFileName","lineNumber","columnNumber","Category","props","_s","initBooks","then","data","className","Name","icon","_c","$RefreshReg$"],"sources":["/home/jef/Documents/Git/buecherei/REACT/src/Category.tsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Book from './Book'\nimport { useEffect, useState } from \"react\";\n\nlet books: Array<book> \n\ninterface props {\n    Name: string;\n    id : string;\n}\ninterface book {\n    author: string,\n    types:  Array<string>,\n    title:  string,\n    isbn:   string,\n    cover:  string,\n}\nasync function fetchBooks(id) {\n    let res = await fetch(\"http://localhost:3001/get?type=\" + id)\n    let Response = await res.json();\n    books = Response as Array<book>;\n    let ret = []\n    books.forEach(b => {\n        ret.push(<li>\n            <Book \n                title={b.title}\n                author={b.author}\n                isbn={b.isbn}\n                cover={b.cover} \n                types={[]} \n            /></li>\n        )\n    })\n\n\n    return ret    \n}\n\n\nexport default function Category(props) {\n    const [books, initBooks] = useState([])\n    useEffect(() => {\n        fetchBooks(props.id).then((data => {initBooks(data)}))\n    },[])\n    return <div className=\"Category\">\n        <h3> {props.Name } <FontAwesomeIcon icon={faCaretDown} /></h3>\n        <ul>\n            { books }\n        </ul>\n    </div>\n}"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,OAAO,uCAAuC;AAC9C,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,IAAIC,KAAkB;AAatB,eAAeC,UAAUA,CAACC,EAAE,EAAE;EAC1B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAAGF,EAAE,CAAC;EAC7D,IAAIG,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EAC/BN,KAAK,GAAGK,QAAuB;EAC/B,IAAIE,GAAG,GAAG,EAAE;EACZP,KAAK,CAACQ,OAAO,CAACC,CAAC,IAAI;IACfF,GAAG,CAACG,IAAI,eAACX,OAAA;MAAAY,QAAA,eACLZ,OAAA,CAACJ,IAAI;QACDiB,KAAK,EAAEH,CAAC,CAACG,KAAM;QACfC,MAAM,EAAEJ,CAAC,CAACI,MAAO;QACjBC,IAAI,EAAEL,CAAC,CAACK,IAAK;QACbC,KAAK,EAAEN,CAAC,CAACM,KAAM;QACfC,KAAK,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,CACV;EACL,CAAC,CAAC;EAGF,OAAOb,GAAG;AACd;AAGA,eAAe,SAASc,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACvB,KAAK,EAAEwB,SAAS,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACvCD,SAAS,CAAC,MAAM;IACZK,UAAU,CAACqB,KAAK,CAACpB,EAAE,CAAC,CAACuB,IAAI,CAAEC,IAAI,IAAI;MAACF,SAAS,CAACE,IAAI,CAAC;IAAA,CAAC,CAAE;EAC1D,CAAC,EAAC,EAAE,CAAC;EACL,oBAAO3B,OAAA;IAAK4B,SAAS,EAAC,UAAU;IAAAhB,QAAA,gBAC5BZ,OAAA;MAAAY,QAAA,GAAI,GAAC,EAACW,KAAK,CAACM,IAAI,EAAE,GAAC,eAAA7B,OAAA,CAACN,eAAe;QAACoC,IAAI,EAAEnC;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9DrB,OAAA;MAAAY,QAAA,EACMX;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AACV;AAACG,EAAA,CAXuBF,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}