[{"/home/jef/Documents/git/mittwald/buecherei/REACT/src/index.tsx":"1","/home/jef/Documents/git/mittwald/buecherei/REACT/src/App.tsx":"2","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Category.tsx":"3","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Create.tsx":"4","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Book.tsx":"5","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Details.tsx":"6"},{"size":492,"mtime":1678362090830,"results":"7","hashOfConfig":"8"},{"size":1399,"mtime":1678347838699,"results":"9","hashOfConfig":"8"},{"size":2217,"mtime":1678347838699,"results":"10","hashOfConfig":"8"},{"size":3241,"mtime":1678366119921,"results":"11","hashOfConfig":"8"},{"size":735,"mtime":1678347838699,"results":"12","hashOfConfig":"8"},{"size":702,"mtime":1678347838700,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1t5i77k",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/home/jef/Documents/git/mittwald/buecherei/REACT/src/index.tsx",[],[],[],"/home/jef/Documents/git/mittwald/buecherei/REACT/src/App.tsx",[],[],"/home/jef/Documents/git/mittwald/buecherei/REACT/src/Category.tsx",["35"],[],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretDown , faCaretLeft, faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Book from './Book'\nimport { useEffect, useState } from \"react\";\nimport \"./style/Category.css\"\n\nlet books: Array<book> \n\ninterface book {\n    author: string,\n    types:  Array<string>,\n    title:  string,\n    isbn:   string,\n    cover:  string,\n}\ninterface props {\n    id:string;\n    name:string;\n}\n\nasync function fetchBooks(id) {\n    if (id === \"null\") return []\n    let res = await fetch(\"http://localhost:3001/get?type=\" + id)\n    let Response = await res.json();\n    books = Response[0].result as Array<book>;\n    return books;\n}\n\nfunction renderBooks(books: Array<book>, scroll: number) {\n    if (books.length === 0) {return <p>Loading</p>}\n\n    let h : Array<book> = []\n    \n    for (let i = 0; i < 4; i++) {\n        if (books.length > i+scroll) h.push(books[i+scroll])\n    }\n\n    return h.map((b) => <Book \n                title =  { b.title  }\n                author = { b.author }\n                isbn =   { b.isbn   }\n                cover =  { b.cover  } \n                types =  {    []    }  \n            />\n        )\n}\n\nexport default function Category(props : props) {\n    const [books, initBooks] = useState([])\n\n    useEffect(() => {\n        fetchBooks(props.id).then((data => {initBooks(data)}))\n    },[])\n\n    const [hidden, setHidden] = useState(true)\n    const [scroll, setScroll] = useState(0)\n\n\n    return <div className=\"Category\">\n        <h3 onClick={ () => {setHidden(!hidden)} } > {props.name } <FontAwesomeIcon icon={hidden ? faCaretDown : faCaretLeft} /></h3>\n        <div className=\"shelf\" style={{ display: hidden ? \"none\" : \"flex\"}}>\n            <div className=\"Arrow\" onClick={ () => {if (scroll !== 0) setScroll(scroll-1)} }>\n                <FontAwesomeIcon icon={ faArrowLeft }/>\n            </div>\n            { renderBooks(books, scroll) }\n            <div className=\"Arrow\" onClick={ () => {if (scroll !== books.length-4) setScroll(scroll+1)}}>\n                <FontAwesomeIcon icon={ faArrowRight }/>\n            </div>\n        </div>\n    </div>\n}\n","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Create.tsx",[],[],"/home/jef/Documents/git/mittwald/buecherei/REACT/src/Book.tsx",["36"],[],"import \"./style/book.css\"\nimport \"./style/Details.css\"\nimport { useState } from \"react\";\nimport Details from \"./Details\";\n\ninterface book {\n    author: string,\n    types:  Array<string>,\n    title:  string,\n    isbn:   string,\n    cover:  string,\n}\ninterface props {\n    book: book;\n    info:   boolean,\n}\n\nfunction Book(props : book) {\n    \n    const [ display, setDisplay ] = useState(false);\n    \n    \n    return <div onClick={ () => {if(!display) {setDisplay(true);} console.log(display)}}>\n        <img src={props.cover} alt=\"cover\" width=\"255\" height=\"380\" />\n        <p>{ props.title }</p>\n        <p>von {props.author}</p>\n        <Details book={ props } info={ display } hide={setDisplay}/>\n    </div>\n} \n\nexport default Book;","/home/jef/Documents/git/mittwald/buecherei/REACT/src/Details.tsx",[],[],{"ruleId":"37","severity":1,"message":"38","line":54,"column":7,"nodeType":"39","endLine":54,"endColumn":9,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":11,"nodeType":"43","messageId":"44","endLine":13,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["45"],"@typescript-eslint/no-unused-vars","'props' is defined but never used.","Identifier","unusedVar",{"desc":"46","fix":"47"},"Update the dependencies array to be: [props.id]",{"range":"48","text":"49"},[1448,1450],"[props.id]"]