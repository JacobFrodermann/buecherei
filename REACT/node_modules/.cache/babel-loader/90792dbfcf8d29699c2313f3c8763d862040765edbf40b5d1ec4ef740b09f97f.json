{"ast":null,"code":"var _jsxFileName = \"/home/jef/Documents/Git/buecherei/REACT/src/Category.tsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Book from './Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction fetchBooks(category) {\n  let res = fetch(\"http://localhost:3001/get\");\n  /*\n  let req = new XMLHttpRequest();\n  req.open('GET', \"http://localhost:3001/get\")\n  req.onreadystatechange = () => {\n  }\n  req.send();\n  \n  //while (req.readyState != 4) console.log(req.readyState)*/\n  let books = JSON.parse(res);\n  let ret;\n  books.forEach(book => {\n    ret += /*#__PURE__*/_jsxDEV(Book, {\n      title: book.title,\n      author: book.author,\n      isbn: book.isbn,\n      cover: book.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  });\n  return ret;\n}\nfunction Category(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Category\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.Name, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCaretDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fetchBooks(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchBooks(props.Name),\n      children: \"fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["FontAwesomeIcon","faCaretDown","Book","jsxDEV","_jsxDEV","fetchBooks","category","res","fetch","books","JSON","parse","ret","forEach","book","title","author","isbn","cover","fileName","_jsxFileName","lineNumber","columnNumber","Category","props","className","children","Name","icon","onClick","_c","$RefreshReg$"],"sources":["/home/jef/Documents/Git/buecherei/REACT/src/Category.tsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Book from './Book'\nimport { waitFor } from \"@testing-library/react\";\n\ninterface props {\n    Name: string;\n}\ninterface book {\n    author: string,\n    types:  Array<string>,\n    title:  string,\n    isbn:   string,\n    cover:  string,\n}\nfunction fetchBooks(category) {\n    let res = fetch(\"http://localhost:3001/get\")\n    /*\n    let req = new XMLHttpRequest();\n    req.open('GET', \"http://localhost:3001/get\")\n    req.onreadystatechange = () => {\n    }\n    req.send();\n    \n    //while (req.readyState != 4) console.log(req.readyState)*/\n    let books : Array<book> = JSON.parse(res) \n    let ret\n    books.forEach(book => {\n        ret += <Book \n                    title =  { book.title  } \n                    author = { book.author } \n                    isbn =   { book.isbn   }\n                    cover =  { book.cover  }>\n                </Book>\n    })\n    return ret    \n}\n\n\nfunction Category(props : props) {\n    return <div className=\"Category\">\n        <h3> {props.Name } <FontAwesomeIcon icon={faCaretDown} /></h3>\n        <ul>\n            {fetchBooks(props)}\n        </ul>\n        <button onClick={() => fetchBooks(props.Name)} >fetch</button>\n    </div>\n}\n\nexport default Category;"],"mappings":";AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,OAAO,uCAAuC;AAC9C,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAazB,SAASC,UAAUA,CAACC,QAAQ,EAAE;EAC1B,IAAIC,GAAG,GAAGC,KAAK,CAAC,2BAA2B,CAAC;EAC5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,KAAmB,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC;EACzC,IAAIK,GAAG;EACPH,KAAK,CAACI,OAAO,CAACC,IAAI,IAAI;IAClBF,GAAG,iBAAIR,OAAA,CAACF,IAAI;MACAa,KAAK,EAAMD,IAAI,CAACC,KAAQ;MACxBC,MAAM,EAAKF,IAAI,CAACE,MAAQ;MACxBC,IAAI,EAAOH,IAAI,CAACG,IAAQ;MACxBC,KAAK,EAAMJ,IAAI,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EACnB,CAAC,CAAC;EACF,OAAOV,GAAG;AACd;AAGA,SAASW,QAAQA,CAACC,KAAa,EAAE;EAC7B,oBAAOpB,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAC5BtB,OAAA;MAAAsB,QAAA,GAAI,GAAC,EAACF,KAAK,CAACG,IAAI,EAAE,GAAC,eAAAvB,OAAA,CAACJ,eAAe;QAAC4B,IAAI,EAAE3B;MAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9DlB,OAAA;MAAAsB,QAAA,EACKrB,UAAU,CAACmB,KAAK;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACLlB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMxB,UAAU,CAACmB,KAAK,CAACG,IAAI,CAAE;MAAAD,QAAA,EAAE;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5D;AACV;AAACQ,EAAA,GARQP,QAAQ;AAUjB,eAAeA,QAAQ;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}